{"version":3,"sources":["redux/types/index.js","Components/PhoneBookForm/PhoneBookForm.jsx","redux/actions/phoneBook.js","helpers/FilterContacts.jsx","Components/PhoneBookFilter/PhoneBookFilter.jsx","Components/PhoneBook/PhoneBook.jsx","Components/PhoneBookList/PhoneBookList.jsx","App.js","redux/reducers/phoneBook.js","redux/reducers/filter.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["ADD_ITEM","DELETE_ITEM","FILTER_ITEM","PhoneBookForm","formInitialState","name","number","email","useState","form","setForm","dispatch","useDispatch","inputHandler","e","target","value","className","onSubmit","preventDefault","id","nanoid","type","payload","htmlFor","required","placeholder","pattern","title","onChange","filterContacts","contacts","filter","obj","toLowerCase","includes","trim","PhoneBookFilter","useSelector","state","items","event","filterItem","contactsArray","console","log","PhoneBook","index","onClick","deleteItem","PhoneBookList","length","map","contact","App","initialState","itemsReducer","action","item","filterReducer","rootReducer","combineReducers","store","createStore","devToolsEnhancer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf8de629.chunk.js","sourcesContent":["export const ADD_ITEM = 'ADD_ITEM';\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\nexport const FILTER_ITEM = 'FILTER_ITEM';\r\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport './PhoneBookForm.css';\nimport { addItem } from '../../redux/actions/phoneBook';\n\nexport default function PhoneBookForm() {\n  const formInitialState = {\n    name: '',\n    number: '',\n    email: '',\n  };\n\n  const [form, setForm] = useState(formInitialState);\n  const dispatch = useDispatch();\n  const inputHandler = e => {\n    const name = e.target.name;\n\n    const value = e.target.value;\n    setForm({ ...form, [name]: value });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    form.id = nanoid();\n    dispatch(addItem(form));\n    setForm(formInitialState);\n  };\n  const { name, number, email } = form;\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"\">Name</label>\n          <input\n            required\n            placeholder=\"Search name\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            onChange={inputHandler}\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"\">Number</label>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            placeholder=\"Search number\"\n            onChange={inputHandler}\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"\">Email</label>\n          <input\n            placeholder=\"bluebill1049@hotmail.com\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={inputHandler}\n          />\n        </div>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </div>\n  );\n}\n","import { ADD_ITEM, DELETE_ITEM } from '../types';\nimport { FILTER_ITEM } from '../types';\n\nexport const addItem = formData => ({\n  type: ADD_ITEM,\n  payload: formData,\n});\n\nexport const deleteItem = id => ({\n  type: DELETE_ITEM,\n  payload: id,\n});\n\nexport const filterItem = value => ({\n  type: FILTER_ITEM,\n  payload: value,\n});\n","// function filterContacts(contacts, filter) {\n//   return contacts.filter((obj) => {\n//     return obj.name.toLowerCase().includes(filter.toLowerCase().trim());\n//   });\n// }\nfunction filterContacts(contacts, value) {\n  // console.log(value);\n  return contacts.filter(obj => {\n    return obj.name.toLowerCase().includes(value.toLowerCase().trim());\n  });\n}\nexport default filterContacts;\n//   console.log(filterContacts(contacts, value));\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterItem } from '../../redux/actions/phoneBook';\nimport filterContacts from '../../helpers/FilterContacts';\n// const contactsArray = filterContacts(contacts, value);\n//   console.log(contactsArray);\n\nfunction PhoneBookFilter() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.items);\n\n  const getFilter = state => state.filter;\n\n  // console.log(contacts);\n  const value = useSelector(getFilter);\n  // console.log(value);\n  const change = event => {\n    const value = event.target.value;\n\n    // console.log(value);\n    // console.log(filterContacts(contacts, value));\n    dispatch(filterItem(value));\n    const contactsArray = filterContacts(contacts, value);\n    console.log(contactsArray);\n    const contactsf = contactsArray;\n\n    return contactsArray;\n  };\n  // useSelector(contactsArray)\n  // const contactsArray = filterContacts(contacts, value);\n\n  // function filterContacts(contacts, value) {\n  //   console.log(value);\n  //   return contacts.filter(obj => {\n  //     return obj.name.toLowerCase().includes(value.toLowerCase().trim());\n  //   });\n  // }\n\n  return (\n    <div>\n      <label>\n        <p>Filter contacts by name: </p>\n        <input\n          name=\"filter\"\n          onChange={change}\n          type=\"text\"\n          value={value}\n          placeholder=\"Name\"\n        />\n      </label>\n      {/* <ul>\n        <li>name</li>\n        <li>tel</li>\n      </ul> */}\n    </div>\n  );\n}\n\nexport default PhoneBookFilter;\n","import { BsTrashFill } from 'react-icons/bs';\nimport { useDispatch } from 'react-redux';\nimport { deleteItem } from '../../redux/actions/phoneBook';\nimport PhoneBookFilter from '../PhoneBookFilter/PhoneBookFilter';\n\nconst PhoneBook = ({ name, number, email, id, index }) => {\n  const dispatch = useDispatch();\n  const deleteContacts = () => {\n    dispatch(deleteItem(id));\n  };\n  return (\n    <div>\n      <p>{name}</p>\n      <p>{number}</p>\n      <p>{email}</p>\n      <span onClick={deleteContacts}>\n        <BsTrashFill />\n      </span>\n      {/* <PhoneBookFilter /> */}\n    </div>\n  );\n};\nexport default PhoneBook;\n","import { useSelector, useDispatch } from 'react-redux';\nimport PhoneBookForm from '../PhoneBookForm/PhoneBookForm';\nimport PhoneBook from '../PhoneBook/PhoneBook';\nimport PhoneBookFilter from '../PhoneBookFilter/PhoneBookFilter';\n\nconst PhoneBookList = () => {\n  const contacts = useSelector(state => state.items);\n\n  return (\n    <div>\n      <PhoneBookForm />\n      <h1>List</h1>\n      {contacts.length > 1 && <PhoneBookFilter />}\n      <ul>\n        {contacts.length ? (\n          contacts.map((contact, index) => (\n            <li key={contact.id}>\n              <PhoneBook {...contact} index={index} />\n            </li>\n          ))\n        ) : (\n          <li>No contacts</li>\n        )}\n      </ul>\n    </div>\n  );\n};\nexport default PhoneBookList;\n","import './App.css';\r\nimport PhoneBookList from './Components/PhoneBookList/PhoneBookList.jsx';\r\n\r\nfunction App() {\r\n  return <PhoneBookList />;\r\n}\r\n\r\nexport default App;\r\n","import { ADD_ITEM, DELETE_ITEM } from '../types';\n\nconst initialState = [\n  { name: 'Rosie Simpson', number: '459-12-56', id: 'id-1' },\n  { name: 'Hermione Kline', number: '443-89-12', id: 'id-2' },\n  { name: 'Eden Clements', number: '645-17-79', id: 'id-3' },\n  { name: 'Annie Copeland', number: '227-91-26', id: 'id-4' },\n];\nconst itemsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_ITEM:\n      return [...state, action.payload];\n    case DELETE_ITEM:\n      // return action.payload;\n      console.log(state);\n      return state.filter(item => item.id !== action.payload);\n    default:\n      return state;\n  }\n};\nexport default itemsReducer;\n","import { FILTER_ITEM } from '../types';\nimport itemsReducer from './phoneBook';\n\nconst initialState = '';\nconst filterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FILTER_ITEM:\n      console.log(state);\n      return [action.payload];\n    default:\n      return state;\n  }\n};\nexport default filterReducer;\n","import { combineReducers } from 'redux';\r\nimport filterReducer from './filter';\r\nimport itemsReducer from './phoneBook';\r\n\r\nexport const rootReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { createStore } from 'redux';\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\nimport { rootReducer } from '../reducers';\r\n// import { configureStore } from '@reduxjs/toolkit';\r\n// import filter from '../slices/filter';\r\n\r\nconst store = createStore(rootReducer, devToolsEnhancer());\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  // <React.StrictMode>\r\n  //   <App />\r\n  // </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}