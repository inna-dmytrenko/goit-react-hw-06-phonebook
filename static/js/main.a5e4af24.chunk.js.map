{"version":3,"sources":["Components/PhoneBookForm/PhoneBookForm.styled.js","redux/phoneBook/phoneBook-actions.js","Components/PhoneBookForm/PhoneBookForm.jsx","Components/PhoneBook/PhoneBook.styled.js","Components/PhoneBook/PhoneBook.jsx","Components/PhoneBookFilter/PhoneBookFilter.styled.js","Components/PhoneBookFilter/PhoneBookFilter.jsx","helpers/FilterContacts.jsx","Components/PhoneBookList/PhoneBookList.styled.js","Components/PhoneBookList/PhoneBookList.jsx","App.js","redux/phoneBook/phoneBook-reducers.js","redux/store/index.js","index.js"],"names":["Form","Input","Label","Button","App","addItem","createAction","deleteItem","filterItem","PhoneBookForm","formInitialState","name","number","email","contacts","useSelector","state","items","useState","form","setForm","dispatch","useDispatch","inputHandler","e","target","value","onSubmit","preventDefault","some","el","toast","id","nanoid","htmlFor","required","placeholder","type","pattern","title","onChange","Frame","PhoneBook","onClick","Para","PhoneBookFilter","filter","event","filterContacts","obj","toLowerCase","includes","trim","Container","Title","PhoneBookList","contactsFromRedux","filterValue","console","log","length","map","contact","index","createReducer","action","payload","item","_","rootReducer","combineReducers","persistConfig","key","storage","_persistedReducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.a5e4af24.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\n\nexport const Form = styled.form`\n  max-width: 400px;\n  margin: 0 auto;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  box-sizing: border-box;\n  width: 100%;\n  border-radius: 4px;\n  border: 1px solid white;\n  padding: 10px 15px;\n  margin-bottom: 10px;\n  font-size: 14px;\n`;\nexport const Label = styled.label`\n  line-height: 2;\n  text-align: left;\n  display: block;\n  margin-bottom: 13px;\n  margin-top: 20px;\n  color: white;\n  font-size: 14px;\n  font-weight: 200;\n`;\nexport const Button = styled.button`\n  background: #ec5990;\n  color: white;\n  text-transform: uppercase;\n  border: none;\n  margin-top: 40px;\n  padding: 20px;\n  font-size: 16px;\n  font-weight: 100;\n  letter-spacing: 10px;\n  margin-left: 18%;\n\n  &:hover {\n    background: #bf1650;\n  }\n`;\nexport const App = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`;\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addItem = createAction('phoneBook/addItem');\r\nexport const deleteItem = createAction('phoneBook/deleteItem');\r\nexport const filterItem = createAction('phoneBook/filterItem');\r\n","import 'react-toastify/dist/ReactToastify.css';\n\nimport { toast, ToastContainer } from 'react-toastify';\n\nimport { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport './PhoneBookForm.styled.js';\n// import { addItem } from '../../redux/actions/phoneBook';\n// import { addItem } from '../../redux/slices/phoneBook';\nimport { addItem } from '../../redux/phoneBook/phoneBook-actions.js';\nimport { useSelector } from 'react-redux';\nimport { Form, Input, Label, Button, App } from './PhoneBookForm.styled';\nexport default function PhoneBookForm() {\n  const formInitialState = {\n    name: '',\n    number: '',\n    email: '',\n  };\n  const contacts = useSelector(state => state.items);\n\n  const [form, setForm] = useState(formInitialState);\n  const dispatch = useDispatch();\n  const inputHandler = e => {\n    const name = e.target.name;\n\n    const value = e.target.value;\n    setForm({ ...form, [name]: value });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (\n      contacts.some(el => el.name === name) ||\n      contacts.some(el => el.number === number) ||\n      contacts.some(el => el.email === email)\n    ) {\n      return toast(`${name} is already in contacts`);\n    }\n\n    form.id = nanoid();\n    dispatch(addItem(form));\n    setForm(formInitialState);\n  };\n  const { name, number, email } = form;\n  return (\n    <App>\n      <Form onSubmit={handleSubmit}>\n        <div>\n          <Label htmlFor=\"\">Name</Label>\n          <Input\n            required\n            placeholder=\"Search name\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            onChange={inputHandler}\n          />\n        </div>\n\n        <div>\n          <Label htmlFor=\"\">Number</Label>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            placeholder=\"Search number\"\n            onChange={inputHandler}\n          />\n        </div>\n\n        <div>\n          <Label htmlFor=\"\">Email</Label>\n          <Input\n            placeholder=\"bluebill1049@hotmail.com\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={inputHandler}\n          />\n        </div>\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n      <ToastContainer />\n    </App>\n  );\n}\n","import styled from '@emotion/styled/macro';\n\nexport const Frame = styled.div`\n  padding: 10px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  border-radius: 10px;\n`;\n","import { BsTrashFill } from 'react-icons/bs';\nimport { useDispatch } from 'react-redux';\n// import { deleteItem } from '../../redux/actions/phoneBook';\n// import { deleteItem } from '../../redux/slices/phoneBook';\nimport { deleteItem } from '../../redux/phoneBook/phoneBook-actions';\n\nimport { Frame } from './PhoneBook.styled';\n\nconst PhoneBook = ({ name, number, email, id }) => {\n  const dispatch = useDispatch();\n  const deleteContacts = () => {\n    dispatch(deleteItem(id));\n  };\n  return (\n    <Frame>\n      <p>{name}</p>\n      <p>{number}</p>\n      <p>{email}</p>\n      <span onClick={deleteContacts}>\n        <BsTrashFill />\n      </span>\n    </Frame>\n  );\n};\nexport default PhoneBook;\n","import styled from '@emotion/styled/macro';\n\nexport const Input = styled.input`\n  display: block;\n  box-sizing: border-box;\n  width: 100%;\n  border-radius: 4px;\n  border: 1px solid white;\n  padding: 10px 15px;\n  margin-bottom: 10px;\n  font-size: 14px;\n`;\nexport const Label = styled.label`\n  line-height: 2;\n  text-align: left;\n  display: block;\n  margin-bottom: 13px;\n  margin-top: 20px;\n  color: white;\n  font-size: 14px;\n  font-weight: 200;\n`;\nexport const Para = styled.p`\n  color: #041f0d;\n  font-size: 24px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\n// import { filterItem } from '../../redux/actions/filter';\n// import { filterItem } from '../../redux/slices/filter';\nimport { filterItem } from '../../redux/phoneBook/phoneBook-actions';\nimport { Input, Label, Para } from './PhoneBookFilter.styled';\n\nfunction PhoneBookFilter() {\n  const dispatch = useDispatch();\n\n  const getFilter = state => state.filter;\n\n  const value = useSelector(getFilter);\n\n  const change = event => {\n    const value = event.target.value;\n\n    dispatch(filterItem(value));\n  };\n\n  return (\n    <div>\n      <Label>\n        <Para>Filter contacts by name: </Para>\n        <Input\n          name=\"filter\"\n          onChange={change}\n          type=\"text\"\n          value={value}\n          placeholder=\"Name\"\n        />\n      </Label>\n    </div>\n  );\n}\n\nexport default PhoneBookFilter;\n","\nfunction filterContacts(contacts, value) {\n  \n  return contacts.filter(obj => {\n    return obj.name.toLowerCase().includes(value.toLowerCase().trim());\n  });\n}\nexport default filterContacts;\n\n","import styled from '@emotion/styled/macro';\n\nexport const Container = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n`;\nexport const Title = styled.h1`\n  font-weight: 100;\n  color: white;\n  text-align: center;\n  padding-bottom: 10px;\n  border-bottom: 1px solid rgb(2, 5, 12);\n`;\nexport const Input = styled.input`\n  display: block;\n  box-sizing: border-box;\n  width: 100%;\n  border-radius: 4px;\n  border: 1px solid white;\n  padding: 10px 15px;\n  margin-bottom: 10px;\n  font-size: 14px;\n`;\nexport const Label = styled.label`\n  line-height: 2;\n  text-align: left;\n  display: block;\n  margin-bottom: 13px;\n  margin-top: 20px;\n  color: white;\n  font-size: 14px;\n  font-weight: 200;\n`;\n","import { useSelector } from 'react-redux';\nimport PhoneBookForm from '../PhoneBookForm/PhoneBookForm';\nimport PhoneBook from '../PhoneBook/PhoneBook';\nimport PhoneBookFilter from '../PhoneBookFilter/PhoneBookFilter';\nimport filterContacts from '../../helpers/FilterContacts';\nimport { Container, Title } from './PhoneBookList.styled';\n\nconst PhoneBookList = () => {\n  const contactsFromRedux = useSelector(state => state.items);\n\n  const filterValue = useSelector(state => state.filter);\n\n  console.log(filterValue);\n  const contacts = filterContacts(contactsFromRedux, filterValue);\n  return (\n    <Container>\n      <PhoneBookForm />\n      <Title>CONTACTS</Title>\n      {contacts && <PhoneBookFilter />}\n      <ul>\n        {contacts.length ? (\n          contacts.map((contact, index) => (\n            <li key={contact.id}>\n              <PhoneBook {...contact} index={index} />\n            </li>\n          ))\n        ) : (\n          <li>No contacts</li>\n        )}\n      </ul>\n    </Container>\n  );\n};\nexport default PhoneBookList;\n","import './App.css';\r\nimport PhoneBookList from './Components/PhoneBookList/PhoneBookList.jsx';\r\n\r\nfunction App() {\r\n  return <PhoneBookList />;\r\n}\r\n\r\nexport default App;\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  addItem,\r\n  deleteItem,\r\n  filterItem,\r\n} from '../phoneBook/phoneBook-actions';\r\n\r\nconst initialState = [\r\n  { name: 'Rosie Simpson', number: '459-12-56', id: 'id-1' },\r\n  { name: 'Hermione Kline', number: '443-89-12', id: 'id-2' },\r\n  { name: 'Eden Clements', number: '645-17-79', id: 'id-3' },\r\n  { name: 'Annie Copeland', number: '227-91-26', id: 'id-4' },\r\n];\r\nconst items = createReducer(initialState, {\r\n  [addItem]: (state, action) => [...state, action.payload],\r\n  [deleteItem]: (state, action) =>\r\n    state.filter(item => item.id !== action.payload),\r\n});\r\nconst filter = createReducer('', {\r\n  [filterItem]: (_, action) => action.payload,\r\n});\r\n\r\nexport const rootReducer = combineReducers({ items, filter });\r\n","// import { createStore } from 'redux';\n// import { devToolsEnhancer } from 'redux-devtools-extension';\n// import { rootReducer } from '../reducers';\n\n// const store = createStore(rootReducer, devToolsEnhancer());\n\n// export default store;\n\n//----   slices\n// import { configureStore } from '@reduxjs/toolkit';\n// import items from '../slices/phoneBook';\n\n// import filter from '../slices/filter';\n\n// const rootReducer = {\n//   items,\n//   filter,\n\n// };\n// const store = configureStore({\n//   reducer: rootReducer,\n//   devTools: process.env.NODE_ENV !== 'production',\n// });\n// export default store;\n// -----   slices end\n\n///  --------   toolkit\n\nimport storage from 'reduxjs-toolkit-persist/lib/storage'; // defaults to localStorage for web\n\nimport {\n  persistReducer,\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'reduxjs-toolkit-persist';\n\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { rootReducer } from '../phoneBook/phoneBook-reducers';\n\nconst persistConfig = {\n  key: 'items',\n  storage,\n};\n\nconst _persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      /* ignore persistance actions */\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: _persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport let persistor = persistStore(store);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'reduxjs-toolkit-persist/integration/react';\r\nimport { store } from './redux/store';\r\nimport { persistor } from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}